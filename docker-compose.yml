version: '3.8'

services:
  telegram-bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: telegram-promo-bot
    restart: unless-stopped
    
    # Environment variables
    environment:
      - TELEGRAM_BOT_ENV=production
      - PYTHONUNBUFFERED=1
    
    # Load environment variables from .env file
    env_file:
      - .env
    
    # Volumes for persistent data
    volumes:
      - ./data:/app/data
      - bot-logs:/app/data/logs
    
    # Port mapping (optional, for web dashboard)
    ports:
      - "5000:5000"
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Network
    networks:
      - bot-network

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: telegram-bot-redis
  #   restart: unless-stopped
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - bot-network
  #   command: redis-server --appendonly yes

  # Optional: Monitoring with Prometheus (uncomment if needed)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: telegram-bot-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus-data:/prometheus
  #   networks:
  #     - bot-network

volumes:
  bot-logs:
    driver: local
  # redis-data:
  #   driver: local
  # prometheus-data:
  #   driver: local

networks:
  bot-network:
    driver: bridge 